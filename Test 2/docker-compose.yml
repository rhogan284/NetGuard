services:
  web:
    build: ./web
    ports:
      - "5002:5000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/ecommerce
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ecommerce
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  log_generator:
    build: ./log_generator
    depends_on:
      logstash:
        condition: service_healthy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9600" ]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  threat_detection:
    build: ./threat_detection
    depends_on:
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_healthy

  log_processor:
    build: ./threat_detection
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: python log_processor.py

  locust:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./locust_tests:/mnt/locust
    command: -f /mnt/locust/locustfile.py --host http://web:5000
    depends_on:
      - web